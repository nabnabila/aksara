{"ast":null,"code":"function n(n) {\n  for (var r = arguments.length, t = Array(r > 1 ? r - 1 : 0), e = 1; e < r; e++) t[e - 1] = arguments[e];\n  throw Error(\"[Immer] minified error nr: \" + n + (t.length ? \" \" + t.map(function (n) {\n    return \"'\" + n + \"'\";\n  }).join(\",\") : \"\") + \". Find the full error at: https://bit.ly/3cXEKWf\");\n}\nfunction r(n) {\n  return !!n && !!n[H];\n}\nfunction t(n) {\n  var r;\n  return !!n && (function (n) {\n    if (!n || \"object\" != typeof n) return !1;\n    var r = Object.getPrototypeOf(n);\n    if (null === r) return !0;\n    var t = Object.hasOwnProperty.call(r, \"constructor\") && r.constructor;\n    return t === Object || \"function\" == typeof t && Function.toString.call(t) === Q;\n  }(n) || Array.isArray(n) || !!n[G] || !!(null === (r = n.constructor) || void 0 === r ? void 0 : r[G]) || c(n) || v(n));\n}\nfunction e(n, r, t) {\n  void 0 === t && (t = !1), 0 === i(n) ? (t ? Object.keys : T)(n).forEach(function (e) {\n    t && \"symbol\" == typeof e || r(e, n[e], n);\n  }) : n.forEach(function (t, e) {\n    return r(e, t, n);\n  });\n}\nfunction i(n) {\n  var r = n[H];\n  return r ? r.t > 3 ? r.t - 4 : r.t : Array.isArray(n) ? 1 : c(n) ? 2 : v(n) ? 3 : 0;\n}\nfunction u(n, r) {\n  return 2 === i(n) ? n.has(r) : Object.prototype.hasOwnProperty.call(n, r);\n}\nfunction o(n, r) {\n  return 2 === i(n) ? n.get(r) : n[r];\n}\nfunction f(n, r, t) {\n  var e = i(n);\n  2 === e ? n.set(r, t) : 3 === e ? n.add(t) : n[r] = t;\n}\nfunction a(n, r) {\n  return n === r ? 0 !== n || 1 / n == 1 / r : n != n && r != r;\n}\nfunction c(n) {\n  return W && n instanceof Map;\n}\nfunction v(n) {\n  return X && n instanceof Set;\n}\nfunction s(n) {\n  return n.i || n.u;\n}\nfunction p(n) {\n  if (Array.isArray(n)) return Array.prototype.slice.call(n);\n  var r = U(n);\n  delete r[H];\n  for (var t = T(r), e = 0; e < t.length; e++) {\n    var i = t[e],\n      u = r[i];\n    !1 === u.writable && (u.writable = !0, u.configurable = !0), (u.get || u.set) && (r[i] = {\n      configurable: !0,\n      writable: !0,\n      enumerable: u.enumerable,\n      value: n[i]\n    });\n  }\n  return Object.create(Object.getPrototypeOf(n), r);\n}\nfunction l(n, u) {\n  return void 0 === u && (u = !1), h(n) || r(n) || !t(n) || (i(n) > 1 && (n.set = n.add = n.clear = n.delete = d), Object.freeze(n), u && e(n, function (n, r) {\n    return l(r, !0);\n  }, !0)), n;\n}\nfunction d() {\n  n(2);\n}\nfunction h(n) {\n  return null == n || \"object\" != typeof n || Object.isFrozen(n);\n}\nfunction y(r) {\n  var t = V[r];\n  return t || n(18, r), t;\n}\nfunction _(n, r) {\n  V[n] || (V[n] = r);\n}\nfunction b() {\n  return I;\n}\nfunction m(n, r) {\n  r && (y(\"Patches\"), n.o = [], n.v = [], n.s = r);\n}\nfunction j(n) {\n  O(n), n.p.forEach(w), n.p = null;\n}\nfunction O(n) {\n  n === I && (I = n.l);\n}\nfunction x(n) {\n  return I = {\n    p: [],\n    l: I,\n    h: n,\n    _: !0,\n    m: 0\n  };\n}\nfunction w(n) {\n  var r = n[H];\n  0 === r.t || 1 === r.t ? r.j() : r.O = !0;\n}\nfunction S(r, e) {\n  e.m = e.p.length;\n  var i = e.p[0],\n    u = void 0 !== r && r !== i;\n  return e.h.S || y(\"ES5\").P(e, r, u), u ? (i[H].g && (j(e), n(4)), t(r) && (r = P(e, r), e.l || M(e, r)), e.o && y(\"Patches\").M(i[H].u, r, e.o, e.v)) : r = P(e, i, []), j(e), e.o && e.s(e.o, e.v), r !== B ? r : void 0;\n}\nfunction P(n, r, t) {\n  if (h(r)) return r;\n  var i = r[H];\n  if (!i) return e(r, function (e, u) {\n    return g(n, i, r, e, u, t);\n  }, !0), r;\n  if (i.A !== n) return r;\n  if (!i.g) return M(n, i.u, !0), i.u;\n  if (!i.R) {\n    i.R = !0, i.A.m--;\n    var u = 4 === i.t || 5 === i.t ? i.i = p(i.k) : i.i,\n      o = u,\n      f = !1;\n    3 === i.t && (o = new Set(u), u.clear(), f = !0), e(o, function (r, e) {\n      return g(n, i, u, r, e, t, f);\n    }), M(n, u, !1), t && n.o && y(\"Patches\").F(i, t, n.o, n.v);\n  }\n  return i.i;\n}\nfunction g(n, e, i, o, a, c, v) {\n  if (r(a)) {\n    var s = P(n, a, c && e && 3 !== e.t && !u(e.N, o) ? c.concat(o) : void 0);\n    if (f(i, o, s), !r(s)) return;\n    n._ = !1;\n  } else v && i.add(a);\n  if (t(a) && !h(a)) {\n    if (!n.h.D && n.m < 1) return;\n    P(n, a), e && e.A.l || M(n, a);\n  }\n}\nfunction M(n, r, t) {\n  void 0 === t && (t = !1), !n.l && n.h.D && n._ && l(r, t);\n}\nfunction A(n, r) {\n  var t = n[H];\n  return (t ? s(t) : n)[r];\n}\nfunction z(n, r) {\n  if (r in n) for (var t = Object.getPrototypeOf(n); t;) {\n    var e = Object.getOwnPropertyDescriptor(t, r);\n    if (e) return e;\n    t = Object.getPrototypeOf(t);\n  }\n}\nfunction E(n) {\n  n.g || (n.g = !0, n.l && E(n.l));\n}\nfunction R(n) {\n  n.i || (n.i = p(n.u));\n}\nfunction k(n, r, t) {\n  var e = c(r) ? y(\"MapSet\").K(r, t) : v(r) ? y(\"MapSet\").$(r, t) : n.S ? function (n, r) {\n    var t = Array.isArray(n),\n      e = {\n        t: t ? 1 : 0,\n        A: r ? r.A : b(),\n        g: !1,\n        R: !1,\n        N: {},\n        l: r,\n        u: n,\n        k: null,\n        i: null,\n        j: null,\n        C: !1\n      },\n      i = e,\n      u = Y;\n    t && (i = [e], u = Z);\n    var o = Proxy.revocable(i, u),\n      f = o.revoke,\n      a = o.proxy;\n    return e.k = a, e.j = f, a;\n  }(r, t) : y(\"ES5\").I(r, t);\n  return (t ? t.A : b()).p.push(e), e;\n}\nfunction F(u) {\n  return r(u) || n(22, u), function n(r) {\n    if (!t(r)) return r;\n    var u,\n      a = r[H],\n      c = i(r);\n    if (a) {\n      if (!a.g && (a.t < 4 || !y(\"ES5\").J(a))) return a.u;\n      a.R = !0, u = N(r, c), a.R = !1;\n    } else u = N(r, c);\n    return e(u, function (r, t) {\n      a && o(a.u, r) === t || f(u, r, n(t));\n    }), 3 === c ? new Set(u) : u;\n  }(u);\n}\nfunction N(n, r) {\n  switch (r) {\n    case 2:\n      return new Map(n);\n    case 3:\n      return Array.from(n);\n  }\n  return p(n);\n}\nfunction D() {\n  function n(n, r) {\n    var t = f[n];\n    return t ? t.enumerable = r : f[n] = t = {\n      configurable: !0,\n      enumerable: r,\n      get: function () {\n        return Y.get(this[H], n);\n      },\n      set: function (r) {\n        Y.set(this[H], n, r);\n      }\n    }, t;\n  }\n  function t(n) {\n    for (var r = n.length - 1; r >= 0; r--) {\n      var t = n[r][H];\n      if (!t.g) switch (t.t) {\n        case 5:\n          o(t) && E(t);\n          break;\n        case 4:\n          i(t) && E(t);\n      }\n    }\n  }\n  function i(n) {\n    for (var r = n.u, t = n.k, e = T(t), i = e.length - 1; i >= 0; i--) {\n      var o = e[i];\n      if (o !== H) {\n        var f = r[o];\n        if (void 0 === f && !u(r, o)) return !0;\n        var c = t[o],\n          v = c && c[H];\n        if (v ? v.u !== f : !a(c, f)) return !0;\n      }\n    }\n    var s = !!r[H];\n    return e.length !== T(r).length + (s ? 0 : 1);\n  }\n  function o(n) {\n    var r = n.k;\n    if (r.length !== n.u.length) return !0;\n    var t = Object.getOwnPropertyDescriptor(r, r.length - 1);\n    if (t && !t.get) return !0;\n    for (var e = 0; e < r.length; e++) if (!r.hasOwnProperty(e)) return !0;\n    return !1;\n  }\n  var f = {};\n  _(\"ES5\", {\n    I: function (r, t) {\n      var e = Array.isArray(r),\n        i = function (r, t) {\n          if (r) {\n            for (var e = Array(t.length), i = 0; i < t.length; i++) Object.defineProperty(e, \"\" + i, n(i, !0));\n            return e;\n          }\n          var u = U(t);\n          delete u[H];\n          for (var o = T(u), f = 0; f < o.length; f++) {\n            var a = o[f];\n            u[a] = n(a, r || !!u[a].enumerable);\n          }\n          return Object.create(Object.getPrototypeOf(t), u);\n        }(e, r),\n        u = {\n          t: e ? 5 : 4,\n          A: t ? t.A : b(),\n          g: !1,\n          R: !1,\n          N: {},\n          l: t,\n          u: r,\n          k: i,\n          i: null,\n          O: !1,\n          C: !1\n        };\n      return Object.defineProperty(i, H, {\n        value: u,\n        writable: !0\n      }), i;\n    },\n    P: function (n, i, f) {\n      f ? r(i) && i[H].A === n && t(n.p) : (n.o && function n(r) {\n        if (r && \"object\" == typeof r) {\n          var t = r[H];\n          if (t) {\n            var i = t.u,\n              f = t.k,\n              a = t.N,\n              c = t.t;\n            if (4 === c) e(f, function (r) {\n              r !== H && (void 0 !== i[r] || u(i, r) ? a[r] || n(f[r]) : (a[r] = !0, E(t)));\n            }), e(i, function (n) {\n              void 0 !== f[n] || u(f, n) || (a[n] = !1, E(t));\n            });else if (5 === c) {\n              if (o(t) && (E(t), a.length = !0), f.length < i.length) for (var v = f.length; v < i.length; v++) a[v] = !1;else for (var s = i.length; s < f.length; s++) a[s] = !0;\n              for (var p = Math.min(f.length, i.length), l = 0; l < p; l++) f.hasOwnProperty(l) || (a[l] = !0), void 0 === a[l] && n(f[l]);\n            }\n          }\n        }\n      }(n.p[0]), t(n.p));\n    },\n    J: function (n) {\n      return 4 === n.t ? i(n) : o(n);\n    }\n  });\n}\nfunction K() {\n  function f(n) {\n    if (!t(n)) return n;\n    if (Array.isArray(n)) return n.map(f);\n    if (c(n)) return new Map(Array.from(n.entries()).map(function (n) {\n      return [n[0], f(n[1])];\n    }));\n    if (v(n)) return new Set(Array.from(n).map(f));\n    var r = Object.create(Object.getPrototypeOf(n));\n    for (var e in n) r[e] = f(n[e]);\n    return u(n, G) && (r[G] = n[G]), r;\n  }\n  function a(n) {\n    return r(n) ? f(n) : n;\n  }\n  var s = \"add\";\n  _(\"Patches\", {\n    W: function (r, t) {\n      return t.forEach(function (t) {\n        for (var e = t.path, u = t.op, a = r, c = 0; c < e.length - 1; c++) {\n          var v = i(a),\n            p = e[c];\n          \"string\" != typeof p && \"number\" != typeof p && (p = \"\" + p), 0 !== v && 1 !== v || \"__proto__\" !== p && \"constructor\" !== p || n(24), \"function\" == typeof a && \"prototype\" === p && n(24), \"object\" != typeof (a = o(a, p)) && n(15, e.join(\"/\"));\n        }\n        var l = i(a),\n          d = f(t.value),\n          h = e[e.length - 1];\n        switch (u) {\n          case \"replace\":\n            switch (l) {\n              case 2:\n                return a.set(h, d);\n              case 3:\n                n(16);\n              default:\n                return a[h] = d;\n            }\n          case s:\n            switch (l) {\n              case 1:\n                return \"-\" === h ? a.push(d) : a.splice(h, 0, d);\n              case 2:\n                return a.set(h, d);\n              case 3:\n                return a.add(d);\n              default:\n                return a[h] = d;\n            }\n          case \"remove\":\n            switch (l) {\n              case 1:\n                return a.splice(h, 1);\n              case 2:\n                return a.delete(h);\n              case 3:\n                return a.delete(t.value);\n              default:\n                return delete a[h];\n            }\n          default:\n            n(17, u);\n        }\n      }), r;\n    },\n    F: function (n, r, t, i) {\n      switch (n.t) {\n        case 0:\n        case 4:\n        case 2:\n          return function (n, r, t, i) {\n            var f = n.u,\n              c = n.i;\n            e(n.N, function (n, e) {\n              var v = o(f, n),\n                p = o(c, n),\n                l = e ? u(f, n) ? \"replace\" : s : \"remove\";\n              if (v !== p || \"replace\" !== l) {\n                var d = r.concat(n);\n                t.push(\"remove\" === l ? {\n                  op: l,\n                  path: d\n                } : {\n                  op: l,\n                  path: d,\n                  value: p\n                }), i.push(l === s ? {\n                  op: \"remove\",\n                  path: d\n                } : \"remove\" === l ? {\n                  op: s,\n                  path: d,\n                  value: a(v)\n                } : {\n                  op: \"replace\",\n                  path: d,\n                  value: a(v)\n                });\n              }\n            });\n          }(n, r, t, i);\n        case 5:\n        case 1:\n          return function (n, r, t, e) {\n            var i = n.u,\n              u = n.N,\n              o = n.i;\n            if (o.length < i.length) {\n              var f = [o, i];\n              i = f[0], o = f[1];\n              var c = [e, t];\n              t = c[0], e = c[1];\n            }\n            for (var v = 0; v < i.length; v++) if (u[v] && o[v] !== i[v]) {\n              var p = r.concat([v]);\n              t.push({\n                op: \"replace\",\n                path: p,\n                value: a(o[v])\n              }), e.push({\n                op: \"replace\",\n                path: p,\n                value: a(i[v])\n              });\n            }\n            for (var l = i.length; l < o.length; l++) {\n              var d = r.concat([l]);\n              t.push({\n                op: s,\n                path: d,\n                value: a(o[l])\n              });\n            }\n            i.length < o.length && e.push({\n              op: \"replace\",\n              path: r.concat([\"length\"]),\n              value: i.length\n            });\n          }(n, r, t, i);\n        case 3:\n          return function (n, r, t, e) {\n            var i = n.u,\n              u = n.i,\n              o = 0;\n            i.forEach(function (n) {\n              if (!u.has(n)) {\n                var i = r.concat([o]);\n                t.push({\n                  op: \"remove\",\n                  path: i,\n                  value: n\n                }), e.unshift({\n                  op: s,\n                  path: i,\n                  value: n\n                });\n              }\n              o++;\n            }), o = 0, u.forEach(function (n) {\n              if (!i.has(n)) {\n                var u = r.concat([o]);\n                t.push({\n                  op: s,\n                  path: u,\n                  value: n\n                }), e.unshift({\n                  op: \"remove\",\n                  path: u,\n                  value: n\n                });\n              }\n              o++;\n            });\n          }(n, r, t, i);\n      }\n    },\n    M: function (n, r, t, e) {\n      t.push({\n        op: \"replace\",\n        path: [],\n        value: r === B ? void 0 : r\n      }), e.push({\n        op: \"replace\",\n        path: [],\n        value: n\n      });\n    }\n  });\n}\nfunction $() {\n  function r(n, r) {\n    function t() {\n      this.constructor = n;\n    }\n    f(n, r), n.prototype = (t.prototype = r.prototype, new t());\n  }\n  function i(n) {\n    n.i || (n.N = new Map(), n.i = new Map(n.u));\n  }\n  function u(n) {\n    n.i || (n.i = new Set(), n.u.forEach(function (r) {\n      if (t(r)) {\n        var e = k(n.A.h, r, n);\n        n.p.set(r, e), n.i.add(e);\n      } else n.i.add(r);\n    }));\n  }\n  function o(r) {\n    r.O && n(3, JSON.stringify(s(r)));\n  }\n  var f = function (n, r) {\n      return (f = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (n, r) {\n        n.__proto__ = r;\n      } || function (n, r) {\n        for (var t in r) r.hasOwnProperty(t) && (n[t] = r[t]);\n      })(n, r);\n    },\n    a = function () {\n      function n(n, r) {\n        return this[H] = {\n          t: 2,\n          l: r,\n          A: r ? r.A : b(),\n          g: !1,\n          R: !1,\n          i: void 0,\n          N: void 0,\n          u: n,\n          k: this,\n          C: !1,\n          O: !1\n        }, this;\n      }\n      r(n, Map);\n      var u = n.prototype;\n      return Object.defineProperty(u, \"size\", {\n        get: function () {\n          return s(this[H]).size;\n        }\n      }), u.has = function (n) {\n        return s(this[H]).has(n);\n      }, u.set = function (n, r) {\n        var t = this[H];\n        return o(t), s(t).has(n) && s(t).get(n) === r || (i(t), E(t), t.N.set(n, !0), t.i.set(n, r), t.N.set(n, !0)), this;\n      }, u.delete = function (n) {\n        if (!this.has(n)) return !1;\n        var r = this[H];\n        return o(r), i(r), E(r), r.u.has(n) ? r.N.set(n, !1) : r.N.delete(n), r.i.delete(n), !0;\n      }, u.clear = function () {\n        var n = this[H];\n        o(n), s(n).size && (i(n), E(n), n.N = new Map(), e(n.u, function (r) {\n          n.N.set(r, !1);\n        }), n.i.clear());\n      }, u.forEach = function (n, r) {\n        var t = this;\n        s(this[H]).forEach(function (e, i) {\n          n.call(r, t.get(i), i, t);\n        });\n      }, u.get = function (n) {\n        var r = this[H];\n        o(r);\n        var e = s(r).get(n);\n        if (r.R || !t(e)) return e;\n        if (e !== r.u.get(n)) return e;\n        var u = k(r.A.h, e, r);\n        return i(r), r.i.set(n, u), u;\n      }, u.keys = function () {\n        return s(this[H]).keys();\n      }, u.values = function () {\n        var n,\n          r = this,\n          t = this.keys();\n        return (n = {})[L] = function () {\n          return r.values();\n        }, n.next = function () {\n          var n = t.next();\n          return n.done ? n : {\n            done: !1,\n            value: r.get(n.value)\n          };\n        }, n;\n      }, u.entries = function () {\n        var n,\n          r = this,\n          t = this.keys();\n        return (n = {})[L] = function () {\n          return r.entries();\n        }, n.next = function () {\n          var n = t.next();\n          if (n.done) return n;\n          var e = r.get(n.value);\n          return {\n            done: !1,\n            value: [n.value, e]\n          };\n        }, n;\n      }, u[L] = function () {\n        return this.entries();\n      }, n;\n    }(),\n    c = function () {\n      function n(n, r) {\n        return this[H] = {\n          t: 3,\n          l: r,\n          A: r ? r.A : b(),\n          g: !1,\n          R: !1,\n          i: void 0,\n          u: n,\n          k: this,\n          p: new Map(),\n          O: !1,\n          C: !1\n        }, this;\n      }\n      r(n, Set);\n      var t = n.prototype;\n      return Object.defineProperty(t, \"size\", {\n        get: function () {\n          return s(this[H]).size;\n        }\n      }), t.has = function (n) {\n        var r = this[H];\n        return o(r), r.i ? !!r.i.has(n) || !(!r.p.has(n) || !r.i.has(r.p.get(n))) : r.u.has(n);\n      }, t.add = function (n) {\n        var r = this[H];\n        return o(r), this.has(n) || (u(r), E(r), r.i.add(n)), this;\n      }, t.delete = function (n) {\n        if (!this.has(n)) return !1;\n        var r = this[H];\n        return o(r), u(r), E(r), r.i.delete(n) || !!r.p.has(n) && r.i.delete(r.p.get(n));\n      }, t.clear = function () {\n        var n = this[H];\n        o(n), s(n).size && (u(n), E(n), n.i.clear());\n      }, t.values = function () {\n        var n = this[H];\n        return o(n), u(n), n.i.values();\n      }, t.entries = function () {\n        var n = this[H];\n        return o(n), u(n), n.i.entries();\n      }, t.keys = function () {\n        return this.values();\n      }, t[L] = function () {\n        return this.values();\n      }, t.forEach = function (n, r) {\n        for (var t = this.values(), e = t.next(); !e.done;) n.call(r, e.value, e.value, this), e = t.next();\n      }, n;\n    }();\n  _(\"MapSet\", {\n    K: function (n, r) {\n      return new a(n, r);\n    },\n    $: function (n, r) {\n      return new c(n, r);\n    }\n  });\n}\nvar C;\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar I,\n  J = \"undefined\" != typeof Symbol && \"symbol\" == typeof Symbol(\"x\"),\n  W = \"undefined\" != typeof Map,\n  X = \"undefined\" != typeof Set,\n  q = \"undefined\" != typeof Proxy && void 0 !== Proxy.revocable && \"undefined\" != typeof Reflect,\n  B = J ? Symbol.for(\"immer-nothing\") : ((C = {})[\"immer-nothing\"] = !0, C),\n  G = J ? Symbol.for(\"immer-draftable\") : \"__$immer_draftable\",\n  H = J ? Symbol.for(\"immer-state\") : \"__$immer_state\",\n  L = \"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\",\n  Q = \"\" + Object.prototype.constructor,\n  T = \"undefined\" != typeof Reflect && Reflect.ownKeys ? Reflect.ownKeys : void 0 !== Object.getOwnPropertySymbols ? function (n) {\n    return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n));\n  } : Object.getOwnPropertyNames,\n  U = Object.getOwnPropertyDescriptors || function (n) {\n    var r = {};\n    return T(n).forEach(function (t) {\n      r[t] = Object.getOwnPropertyDescriptor(n, t);\n    }), r;\n  },\n  V = {},\n  Y = {\n    get: function (n, r) {\n      if (r === H) return n;\n      var e = s(n);\n      if (!u(e, r)) return function (n, r, t) {\n        var e,\n          i = z(r, t);\n        return i ? \"value\" in i ? i.value : null === (e = i.get) || void 0 === e ? void 0 : e.call(n.k) : void 0;\n      }(n, e, r);\n      var i = e[r];\n      return n.R || !t(i) ? i : i === A(n.u, r) ? (R(n), n.i[r] = k(n.A.h, i, n)) : i;\n    },\n    has: function (n, r) {\n      return r in s(n);\n    },\n    ownKeys: function (n) {\n      return Reflect.ownKeys(s(n));\n    },\n    set: function (n, r, t) {\n      var e = z(s(n), r);\n      if (null == e ? void 0 : e.set) return e.set.call(n.k, t), !0;\n      if (!n.g) {\n        var i = A(s(n), r),\n          o = null == i ? void 0 : i[H];\n        if (o && o.u === t) return n.i[r] = t, n.N[r] = !1, !0;\n        if (a(t, i) && (void 0 !== t || u(n.u, r))) return !0;\n        R(n), E(n);\n      }\n      return n.i[r] === t && (void 0 !== t || r in n.i) || Number.isNaN(t) && Number.isNaN(n.i[r]) || (n.i[r] = t, n.N[r] = !0), !0;\n    },\n    deleteProperty: function (n, r) {\n      return void 0 !== A(n.u, r) || r in n.u ? (n.N[r] = !1, R(n), E(n)) : delete n.N[r], n.i && delete n.i[r], !0;\n    },\n    getOwnPropertyDescriptor: function (n, r) {\n      var t = s(n),\n        e = Reflect.getOwnPropertyDescriptor(t, r);\n      return e ? {\n        writable: !0,\n        configurable: 1 !== n.t || \"length\" !== r,\n        enumerable: e.enumerable,\n        value: t[r]\n      } : e;\n    },\n    defineProperty: function () {\n      n(11);\n    },\n    getPrototypeOf: function (n) {\n      return Object.getPrototypeOf(n.u);\n    },\n    setPrototypeOf: function () {\n      n(12);\n    }\n  },\n  Z = {};\ne(Y, function (n, r) {\n  Z[n] = function () {\n    return arguments[0] = arguments[0][0], r.apply(this, arguments);\n  };\n}), Z.deleteProperty = function (n, r) {\n  return Z.set.call(this, n, r, void 0);\n}, Z.set = function (n, r, t) {\n  return Y.set.call(this, n[0], r, t, n[0]);\n};\nvar nn = function () {\n    function e(r) {\n      var e = this;\n      this.S = q, this.D = !0, this.produce = function (r, i, u) {\n        if (\"function\" == typeof r && \"function\" != typeof i) {\n          var o = i;\n          i = r;\n          var f = e;\n          return function (n) {\n            var r = this;\n            void 0 === n && (n = o);\n            for (var t = arguments.length, e = Array(t > 1 ? t - 1 : 0), u = 1; u < t; u++) e[u - 1] = arguments[u];\n            return f.produce(n, function (n) {\n              var t;\n              return (t = i).call.apply(t, [r, n].concat(e));\n            });\n          };\n        }\n        var a;\n        if (\"function\" != typeof i && n(6), void 0 !== u && \"function\" != typeof u && n(7), t(r)) {\n          var c = x(e),\n            v = k(e, r, void 0),\n            s = !0;\n          try {\n            a = i(v), s = !1;\n          } finally {\n            s ? j(c) : O(c);\n          }\n          return \"undefined\" != typeof Promise && a instanceof Promise ? a.then(function (n) {\n            return m(c, u), S(n, c);\n          }, function (n) {\n            throw j(c), n;\n          }) : (m(c, u), S(a, c));\n        }\n        if (!r || \"object\" != typeof r) {\n          if (void 0 === (a = i(r)) && (a = r), a === B && (a = void 0), e.D && l(a, !0), u) {\n            var p = [],\n              d = [];\n            y(\"Patches\").M(r, a, p, d), u(p, d);\n          }\n          return a;\n        }\n        n(21, r);\n      }, this.produceWithPatches = function (n, r) {\n        if (\"function\" == typeof n) return function (r) {\n          for (var t = arguments.length, i = Array(t > 1 ? t - 1 : 0), u = 1; u < t; u++) i[u - 1] = arguments[u];\n          return e.produceWithPatches(r, function (r) {\n            return n.apply(void 0, [r].concat(i));\n          });\n        };\n        var t,\n          i,\n          u = e.produce(n, r, function (n, r) {\n            t = n, i = r;\n          });\n        return \"undefined\" != typeof Promise && u instanceof Promise ? u.then(function (n) {\n          return [n, t, i];\n        }) : [u, t, i];\n      }, \"boolean\" == typeof (null == r ? void 0 : r.useProxies) && this.setUseProxies(r.useProxies), \"boolean\" == typeof (null == r ? void 0 : r.autoFreeze) && this.setAutoFreeze(r.autoFreeze);\n    }\n    var i = e.prototype;\n    return i.createDraft = function (e) {\n      t(e) || n(8), r(e) && (e = F(e));\n      var i = x(this),\n        u = k(this, e, void 0);\n      return u[H].C = !0, O(i), u;\n    }, i.finishDraft = function (n, r) {\n      var t = (n && n[H]).A;\n      return m(t, r), S(void 0, t);\n    }, i.setAutoFreeze = function (n) {\n      this.D = n;\n    }, i.setUseProxies = function (r) {\n      r && !q && n(20), this.S = r;\n    }, i.applyPatches = function (n, t) {\n      var e;\n      for (e = t.length - 1; e >= 0; e--) {\n        var i = t[e];\n        if (0 === i.path.length && \"replace\" === i.op) {\n          n = i.value;\n          break;\n        }\n      }\n      e > -1 && (t = t.slice(e + 1));\n      var u = y(\"Patches\").W;\n      return r(n) ? u(n, t) : this.produce(n, function (n) {\n        return u(n, t);\n      });\n    }, e;\n  }(),\n  rn = new nn(),\n  tn = rn.produce,\n  en = rn.produceWithPatches.bind(rn),\n  un = rn.setAutoFreeze.bind(rn),\n  on = rn.setUseProxies.bind(rn),\n  fn = rn.applyPatches.bind(rn),\n  an = rn.createDraft.bind(rn),\n  cn = rn.finishDraft.bind(rn);\nexports.Immer = nn, exports.applyPatches = fn, exports.castDraft = function (n) {\n  return n;\n}, exports.castImmutable = function (n) {\n  return n;\n}, exports.createDraft = an, exports.current = F, exports.default = tn, exports.enableAllPlugins = function () {\n  D(), $(), K();\n}, exports.enableES5 = D, exports.enableMapSet = $, exports.enablePatches = K, exports.finishDraft = cn, exports.freeze = l, exports.immerable = G, exports.isDraft = r, exports.isDraftable = t, exports.nothing = B, exports.original = function (t) {\n  return r(t) || n(23, t), t[H].u;\n}, exports.produce = tn, exports.produceWithPatches = en, exports.setAutoFreeze = un, exports.setUseProxies = on;","map":{"version":3,"names":["n","r","arguments","length","t","Array","e","Error","map","join","H","Object","getPrototypeOf","hasOwnProperty","call","constructor","Function","toString","Q","isArray","G","c","v","i","keys","T","forEach","u","has","prototype","o","get","f","set","add","a","W","Map","X","Set","s","p","slice","U","writable","configurable","enumerable","value","create","l","h","clear","delete","d","freeze","isFrozen","y","V","_","b","I","m","j","O","w","x","S","P","g","M","B","A","R","k","F","N","concat","D","z","getOwnPropertyDescriptor","E","K","$","C","Y","Z","Proxy","revocable","revoke","proxy","push","J","from","defineProperty","Math","min","entries","path","op","splice","unshift","JSON","stringify","extendStatics","setPrototypeOf","__proto__","size","values","L","next","done","exports","Symbol","q","Reflect","for","iterator","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","getOwnPropertyDescriptors","Number","isNaN","deleteProperty","apply","nn","produce","Promise","then","produceWithPatches","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","finishDraft","applyPatches","rn","tn","en","bind","un","on","fn","an","cn","Immer","castDraft","castImmutable","current","default","enableAllPlugins","enableES5","enableMapSet","enablePatches","immerable","isDraft","isDraftable","nothing","original"],"sources":["C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\utils\\errors.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\utils\\common.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\utils\\plugins.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\core\\scope.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\core\\finalize.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\core\\proxy.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\core\\immerClass.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\core\\current.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\plugins\\es5.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\plugins\\patches.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\plugins\\mapset.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\utils\\env.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\immer.ts","C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\immer\\src\\plugins\\all.ts"],"sourcesContent":["const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor?.[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumerable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// To preserve insertion order in all cases we then clear the set\n\t\t// And we let finalizeProperty know it needs to re-add non-draft children back to the target\n\t\tlet resultEach = result\n\t\tlet isSet = false\n\t\tif (state.type_ === ProxyType.Set) {\n\t\t\tresultEach = new Set(result)\n\t\t\tresult.clear()\n\t\t\tisSet = true\n\t\t}\n\t\teach(resultEach, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path, isSet)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath,\n\ttargetIsSet?: boolean\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t} else if (targetIsSet) {\n\t\ttargetObject.add(childValue)\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\t// we never freeze for a non-root scope; as it would prevent pruning for drafts inside wrapping objects\n\tif (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\t(state.copy_![prop] === value &&\n\t\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t\t(value !== undefined || prop in state.copy_)) ||\n\t\t\t// special case: NaN\n\t\t\t(Number.isNaN(value) && Number.isNaN(state.copy_![prop]))\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (base: any, recipe?: any): any => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => base(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(base, recipe, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\n\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\treturn result.then(nextState => [nextState, patches!, inversePatches!])\n\t\t}\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyType,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyType.ES5Array : (ProxyType.ES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyType.ES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyType.ES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyType.ES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyType.ES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (!draft_.hasOwnProperty(i)) {\n\t\t\t\t\tassigned_[i] = true\n\t\t\t\t}\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\t// last descriptor can be not a trap, if the array was extended\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// if we miss a property, it has been deleted, so array probobaly changed\n\t\tfor (let i = 0; i < draft_.length; i++) {\n\t\t\tif (!draft_.hasOwnProperty(i)) return true\n\t\t}\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyType.ES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyType,\n\tArchtype,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyType.ProxyObject:\n\t\t\tcase ProxyType.ES5Object:\n\t\t\tcase ProxyType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyType.ES5Array:\n\t\t\tcase ProxyType.ProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tlet p = path[i]\n\t\t\t\tif (typeof p !== \"string\" && typeof p !== \"number\") {\n\t\t\t\t\tp = \"\" + p\n\t\t\t\t}\n\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === Archtype.Object || parentType === Archtype.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(24)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\") die(24)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyType,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tif (state.base_.has(key)) {\n\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t} else {\n\t\t\t\tstate.assigned_!.delete(key)\n\t\t\t}\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}