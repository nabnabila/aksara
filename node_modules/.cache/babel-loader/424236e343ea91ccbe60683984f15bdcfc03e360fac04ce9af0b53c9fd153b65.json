{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nabila\\\\Desktop\\\\aksara\\\\src\\\\components\\\\isikuismurda\\\\UtakAtikGathukMurda.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport dramaria from \"../../assets/image/kuis/dramaria.png\";\nimport tragedi from \"../../assets/image/kuis/tragedi.png\";\nimport dagelan from \"../../assets/image/kuis/dagelan.png\";\nimport opera from \"../../assets/image/kuis/opera.png\";\nimport teater from \"../../assets/image/kuis/teater.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst crosswordData = {\n  grid: Array(8).fill(Array(8).fill(\"\")),\n  // Empty grid\n  clues: {\n    across: [{\n      clue: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: dramaria,\n        alt: \"Drama Clue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }, this),\n      answer: \"DRAMARIA\",\n      row: 1,\n      col: 2,\n      direction: \"across\"\n    }, {\n      clue: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: opera,\n        alt: \"Opera Clue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this),\n      answer: \"OPERA\",\n      row: 4,\n      col: 0,\n      direction: \"across\"\n    }, {\n      clue: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: teater,\n        alt: \"Teater Clue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this),\n      answer: \"TEATER\",\n      row: 6,\n      col: 0,\n      direction: \"across\"\n    }],\n    down: [{\n      clue: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: tragedi,\n        alt: \"Tragedi Clue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this),\n      answer: \"TRAGEDI\",\n      row: 0,\n      col: 7,\n      direction: \"down\"\n    }, {\n      clue: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: dagelan,\n        alt: \"Dagelan Clue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this),\n      answer: \"DAGELAN\",\n      row: 1,\n      col: 2,\n      direction: \"down\"\n    }]\n  }\n};\nconst Crossword = ({\n  onCrosswordCorrect\n}) => {\n  _s();\n  const [highlightedCells, setHighlightedCells] = useState([]);\n  const navigate = useNavigate();\n  const handleChange = (row, col, value) => {\n    const newGrid = crosswordData.grid.map((r, rIndex) => r.map((cell, cIndex) => rIndex === row && cIndex === col ? value : cell));\n    crosswordData.grid = newGrid; // Update grid with new value\n\n    checkCorrectness();\n  };\n  const checkCorrectness = () => {\n    // Implement the logic to check if the crossword is completed correctly\n    const isCorrect = true; // Dummy check\n    if (isCorrect) {\n      onCrosswordCorrect();\n      navigate(\"/nextPage\"); // Navigate to the next page\n    }\n  };\n  const highlightCells = (row, col, direction, length) => {\n    const cells = [];\n    for (let i = 0; i < length; i++) {\n      if (direction === \"across\") {\n        cells.push({\n          row,\n          col: col + i\n        });\n      } else {\n        cells.push({\n          row: row + i,\n          col\n        });\n      }\n    }\n    setHighlightedCells(cells);\n  };\n  const getCellClass = (row, col) => {\n    return highlightedCells.some(c => c.row === row && c.col === col) ? \"highlighted\" : \"answer-block\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crossword-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crossword-grid\",\n      children: crosswordData.grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crossword-row\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          value: cell,\n          onChange: e => handleChange(rowIndex, colIndex, e.target.value),\n          maxLength: 1,\n          className: `crossword-cell ${getCellClass(rowIndex, colIndex)}`\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clues\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Across\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), crosswordData.clues.across.map((clue, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clue\",\n        onClick: () => highlightCells(clue.row, clue.col, clue.direction, clue.answer.length),\n        children: clue.clue\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), crosswordData.clues.down.map((clue, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clue\",\n        onClick: () => highlightCells(clue.row, clue.col, clue.direction, clue.answer.length),\n        children: clue.clue\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Crossword, \"pwA24mBLp58xUejCc+nY+IdEnYI=\", false, function () {\n  return [useNavigate];\n});\n_c = Crossword;\nexport default Crossword;\nvar _c;\n$RefreshReg$(_c, \"Crossword\");","map":{"version":3,"names":["React","useState","dramaria","tragedi","dagelan","opera","teater","useNavigate","jsxDEV","_jsxDEV","crosswordData","grid","Array","fill","clues","across","clue","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","answer","row","col","direction","down","Crossword","onCrosswordCorrect","_s","highlightedCells","setHighlightedCells","navigate","handleChange","value","newGrid","map","r","rIndex","cell","cIndex","checkCorrectness","isCorrect","highlightCells","length","cells","i","push","getCellClass","some","c","className","children","rowIndex","colIndex","onChange","e","target","maxLength","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Nabila/Desktop/aksara/src/components/isikuismurda/UtakAtikGathukMurda.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport dramaria from \"../../assets/image/kuis/dramaria.png\";\r\nimport tragedi from \"../../assets/image/kuis/tragedi.png\";\r\nimport dagelan from \"../../assets/image/kuis/dagelan.png\";\r\nimport opera from \"../../assets/image/kuis/opera.png\";\r\nimport teater from \"../../assets/image/kuis/teater.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst crosswordData = {\r\n  grid: Array(8).fill(Array(8).fill(\"\")), // Empty grid\r\n  clues: {\r\n    across: [\r\n      {\r\n        clue: <img src={dramaria} alt=\"Drama Clue\" />,\r\n        answer: \"DRAMARIA\",\r\n        row: 1,\r\n        col: 2,\r\n        direction: \"across\",\r\n      },\r\n      {\r\n        clue: <img src={opera} alt=\"Opera Clue\" />,\r\n        answer: \"OPERA\",\r\n        row: 4,\r\n        col: 0,\r\n        direction: \"across\",\r\n      },\r\n      {\r\n        clue: <img src={teater} alt=\"Teater Clue\" />,\r\n        answer: \"TEATER\",\r\n        row: 6,\r\n        col: 0,\r\n        direction: \"across\",\r\n      },\r\n    ],\r\n    down: [\r\n      {\r\n        clue: <img src={tragedi} alt=\"Tragedi Clue\" />,\r\n        answer: \"TRAGEDI\",\r\n        row: 0,\r\n        col: 7,\r\n        direction: \"down\",\r\n      },\r\n      {\r\n        clue: <img src={dagelan} alt=\"Dagelan Clue\" />,\r\n        answer: \"DAGELAN\",\r\n        row: 1,\r\n        col: 2,\r\n        direction: \"down\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst Crossword = ({ onCrosswordCorrect }) => {\r\n  const [highlightedCells, setHighlightedCells] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (row, col, value) => {\r\n    const newGrid = crosswordData.grid.map((r, rIndex) =>\r\n      r.map((cell, cIndex) => (rIndex === row && cIndex === col ? value : cell))\r\n    );\r\n    crosswordData.grid = newGrid; // Update grid with new value\r\n\r\n    checkCorrectness();\r\n  };\r\n\r\n  const checkCorrectness = () => {\r\n    // Implement the logic to check if the crossword is completed correctly\r\n    const isCorrect = true; // Dummy check\r\n    if (isCorrect) {\r\n      onCrosswordCorrect();\r\n      navigate(\"/nextPage\"); // Navigate to the next page\r\n    }\r\n  };\r\n\r\n  const highlightCells = (row, col, direction, length) => {\r\n    const cells = [];\r\n    for (let i = 0; i < length; i++) {\r\n      if (direction === \"across\") {\r\n        cells.push({ row, col: col + i });\r\n      } else {\r\n        cells.push({ row: row + i, col });\r\n      }\r\n    }\r\n    setHighlightedCells(cells);\r\n  };\r\n\r\n  const getCellClass = (row, col) => {\r\n    return highlightedCells.some((c) => c.row === row && c.col === col)\r\n      ? \"highlighted\"\r\n      : \"answer-block\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"crossword-container\">\r\n      <div className=\"crossword-grid\">\r\n        {crosswordData.grid.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"crossword-row\">\r\n            {row.map((cell, colIndex) => (\r\n              <input\r\n                key={colIndex}\r\n                value={cell}\r\n                onChange={(e) =>\r\n                  handleChange(rowIndex, colIndex, e.target.value)\r\n                }\r\n                maxLength={1}\r\n                className={`crossword-cell ${getCellClass(rowIndex, colIndex)}`}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"clues\">\r\n        <h2>Across</h2>\r\n        {crosswordData.clues.across.map((clue, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"clue\"\r\n            onClick={() =>\r\n              highlightCells(\r\n                clue.row,\r\n                clue.col,\r\n                clue.direction,\r\n                clue.answer.length\r\n              )\r\n            }\r\n          >\r\n            {clue.clue}\r\n          </div>\r\n        ))}\r\n        <h2>Down</h2>\r\n        {crosswordData.clues.down.map((clue, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"clue\"\r\n            onClick={() =>\r\n              highlightCells(\r\n                clue.row,\r\n                clue.col,\r\n                clue.direction,\r\n                clue.answer.length\r\n              )\r\n            }\r\n          >\r\n            {clue.clue}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Crossword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}