{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"C:/Users/Nabila/Desktop/aksara/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\nvar _templateObject;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = __importStar(require(\"react\"));\nconst prop_types_1 = __importDefault(require(\"prop-types\"));\n// import produce from 'immer';\nconst styled_components_1 = __importDefault(require(\"styled-components\"));\nconst CrosswordProvider_1 = __importStar(require(\"./CrosswordProvider\"));\nconst CrosswordGrid_1 = __importDefault(require(\"./CrosswordGrid\"));\nconst DirectionClues_1 = __importDefault(require(\"./DirectionClues\"));\n// interface OuterWrapperProps {\n//   correct?: boolean;\n// }\n// const OuterWrapper = styled.div.attrs<OuterWrapperProps>((props) => ({\n//   className: `crossword${props.correct ? ' correct' : ''}`,\n// }))<OuterWrapperProps>`\n//   margin: 0;\n//   padding: 0;\n//   border: 0;\n//   /* position: relative; */\n//   /* width: 40%; */\n//   display: flex;\n//   flex-direction: row;\n//   @media (max-width: ${(props) => props.theme.columnBreakpoint}) {\n//     flex-direction: column;\n//   }\n// `;\nconst CluesWrapper = styled_components_1.default.div.attrs(( /* props */\n) => ({\n  className: 'clues'\n}))(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  padding: 0 1em;\\n  flex: 1 2 25%;\\n\\n  @media (max-width: \", \") {\\n    margin-top: 2em;\\n  }\\n\\n  .direction {\\n    margin-bottom: 2em;\\n    /* padding: 0 1em;\\n    flex: 1 1 20%; */\\n\\n    .header {\\n      margin-top: 0;\\n      margin-bottom: 0.5em;\\n    }\\n\\n    div {\\n      margin-top: 0.5em;\\n    }\\n  }\\n\"])), props => props.theme.columnBreakpoint);\nconst crosswordPropTypes = Object.assign(Object.assign({}, CrosswordProvider_1.crosswordProviderPropTypes), {\n  /** the label for the \"across\" clues */\n  acrossLabel: prop_types_1.default.string,\n  /** the label for the \"down\" clues */\n  downLabel: prop_types_1.default.string\n});\n// @ts-expect-error TS doesn't allow non-optional props to be deleted, but we're\n// building this into a new type!\ndelete crosswordPropTypes.children;\n/**\n * The default export from the react-crossword library, `Crossword` renders an\n * answer grid and clues in a basic layout and provides access to most\n * functionality.\n */\nconst Crossword = react_1.default.forwardRef((_a, ref) => {\n  var {\n      acrossLabel,\n      downLabel\n    } = _a,\n    props = __rest(_a, [\"acrossLabel\", \"downLabel\"]);\n  const providerRef = (0, react_1.useRef)(null);\n  // expose some imperative methods\n  (0, react_1.useImperativeHandle)(ref, () => ({\n    /**\n     * Sets focus to the crossword component.\n     */\n    focus: () => {\n      var _a;\n      return (_a = providerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    },\n    /**\n     * Resets the entire crossword; clearing all answers in the grid and\n     * also any persisted data.\n     */\n    reset: () => {\n      var _a;\n      return (_a = providerRef.current) === null || _a === void 0 ? void 0 : _a.reset();\n    },\n    /**\n     * Fills all the answers in the grid and calls the `onLoadedCorrect`\n     * callback with _**every**_ answer.\n     */\n    fillAllAnswers: () => {\n      var _a;\n      return (_a = providerRef.current) === null || _a === void 0 ? void 0 : _a.fillAllAnswers();\n    },\n    /**\n     * Returns whether the crossword is entirely correct or not.\n     *\n     * @since 2.2.0\n     */\n    isCrosswordCorrect: () => {\n      var _a;\n      return !!((_a = providerRef.current) === null || _a === void 0 ? void 0 : _a.isCrosswordCorrect());\n    },\n    /**\n     * Sets the “guess” character for a specific grid position.\n     *\n     * @since 4.1.0\n     */\n    setGuess: (row, col, guess) => {\n      var _a;\n      return (_a = providerRef.current) === null || _a === void 0 ? void 0 : _a.setGuess(row, col, guess);\n    }\n  }), []);\n  return (0, jsx_runtime_1.jsxs)(CrosswordProvider_1.default, Object.assign({}, props, {\n    ref: providerRef\n  }, {\n    children: [(0, jsx_runtime_1.jsx)(CrosswordGrid_1.default, {}), (0, jsx_runtime_1.jsxs)(CluesWrapper, {\n      children: [(0, jsx_runtime_1.jsx)(DirectionClues_1.default, {\n        direction: \"across\",\n        label: acrossLabel\n      }), (0, jsx_runtime_1.jsx)(DirectionClues_1.default, {\n        direction: \"down\",\n        label: downLabel\n      })]\n    })]\n  }));\n});\nCrossword.displayName = 'Crossword';\nCrossword.propTypes = crosswordPropTypes;\nCrossword.defaultProps = Object.assign(Object.assign({}, CrosswordProvider_1.default.defaultProps), {\n  acrossLabel: undefined,\n  downLabel: undefined\n});\nexports.default = Crossword;","map":{"version":3,"names":["react_1","__importStar","require","prop_types_1","__importDefault","styled_components_1","CrosswordProvider_1","CrosswordGrid_1","DirectionClues_1","CluesWrapper","default","div","attrs","className","_templateObject","_taggedTemplateLiteral","props","theme","columnBreakpoint","crosswordPropTypes","Object","assign","crosswordProviderPropTypes","acrossLabel","string","downLabel","children","Crossword","forwardRef","_a","ref","__rest","providerRef","useRef","useImperativeHandle","focus","current","reset","fillAllAnswers","isCrosswordCorrect","setGuess","row","col","guess","jsx_runtime_1","jsxs","jsx","direction","label","displayName","propTypes","defaultProps","undefined","exports"],"sources":["C:\\Users\\Nabila\\Desktop\\aksara\\node_modules\\@jaredreisinger\\react-crossword\\src\\Crossword.tsx"],"sourcesContent":["import React, { useImperativeHandle, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n// import produce from 'immer';\nimport styled from 'styled-components';\n\nimport { EnhancedProps } from './types';\n\nimport CrosswordProvider, {\n  CrosswordProviderImperative,\n  CrosswordProviderProps,\n  crosswordProviderPropTypes,\n} from './CrosswordProvider';\nimport CrosswordGrid from './CrosswordGrid';\nimport DirectionClues from './DirectionClues';\n\n// interface OuterWrapperProps {\n//   correct?: boolean;\n// }\n\n// const OuterWrapper = styled.div.attrs<OuterWrapperProps>((props) => ({\n//   className: `crossword${props.correct ? ' correct' : ''}`,\n// }))<OuterWrapperProps>`\n//   margin: 0;\n//   padding: 0;\n//   border: 0;\n//   /* position: relative; */\n//   /* width: 40%; */\n//   display: flex;\n//   flex-direction: row;\n\n//   @media (max-width: ${(props) => props.theme.columnBreakpoint}) {\n//     flex-direction: column;\n//   }\n// `;\n\nconst CluesWrapper = styled.div.attrs((/* props */) => ({\n  className: 'clues',\n}))`\n  padding: 0 1em;\n  flex: 1 2 25%;\n\n  @media (max-width: ${(props) => props.theme.columnBreakpoint}) {\n    margin-top: 2em;\n  }\n\n  .direction {\n    margin-bottom: 2em;\n    /* padding: 0 1em;\n    flex: 1 1 20%; */\n\n    .header {\n      margin-top: 0;\n      margin-bottom: 0.5em;\n    }\n\n    div {\n      margin-top: 0.5em;\n    }\n  }\n`;\n\nconst crosswordPropTypes = {\n  ...crosswordProviderPropTypes,\n\n  /** the label for the \"across\" clues */\n  acrossLabel: PropTypes.string,\n\n  /** the label for the \"down\" clues */\n  downLabel: PropTypes.string,\n};\n\n// @ts-expect-error TS doesn't allow non-optional props to be deleted, but we're\n// building this into a new type!\ndelete crosswordPropTypes.children;\n\n// This somewhat non-obvious construction is to get the typings from\n// CrosswordProvider where they are \"better\" than the default inferred types.\nexport type CrosswordProps = EnhancedProps<\n  typeof crosswordPropTypes,\n  Omit<CrosswordProviderProps, 'children'>\n>;\nexport type CrosswordImperative = CrosswordProviderImperative;\n\n/**\n * The default export from the react-crossword library, `Crossword` renders an\n * answer grid and clues in a basic layout and provides access to most\n * functionality.\n */\nconst Crossword = React.forwardRef<CrosswordImperative, CrosswordProps>(\n  ({ acrossLabel, downLabel, ...props }, ref) => {\n    const providerRef = useRef<CrosswordProviderImperative>(null);\n\n    // expose some imperative methods\n    useImperativeHandle(\n      ref,\n      () => ({\n        /**\n         * Sets focus to the crossword component.\n         */\n        focus: () => providerRef.current?.focus(),\n\n        /**\n         * Resets the entire crossword; clearing all answers in the grid and\n         * also any persisted data.\n         */\n        reset: () => providerRef.current?.reset(),\n\n        /**\n         * Fills all the answers in the grid and calls the `onLoadedCorrect`\n         * callback with _**every**_ answer.\n         */\n        fillAllAnswers: () => providerRef.current?.fillAllAnswers(),\n\n        /**\n         * Returns whether the crossword is entirely correct or not.\n         *\n         * @since 2.2.0\n         */\n        isCrosswordCorrect: () => !!providerRef.current?.isCrosswordCorrect(),\n\n        /**\n         * Sets the “guess” character for a specific grid position.\n         *\n         * @since 4.1.0\n         */\n        setGuess: (row: number, col: number, guess: string) =>\n          providerRef.current?.setGuess(row, col, guess),\n      }),\n      []\n    );\n\n    return (\n      <CrosswordProvider {...props} ref={providerRef}>\n        <CrosswordGrid />\n        <CluesWrapper>\n          <DirectionClues direction=\"across\" label={acrossLabel} />\n          <DirectionClues direction=\"down\" label={downLabel} />\n        </CluesWrapper>\n      </CrosswordProvider>\n    );\n  }\n);\n\nCrossword.displayName = 'Crossword';\nCrossword.propTypes = crosswordPropTypes;\nCrossword.defaultProps = {\n  ...CrosswordProvider.defaultProps,\n  acrossLabel: undefined,\n  downLabel: undefined,\n};\n\nexport default Crossword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}